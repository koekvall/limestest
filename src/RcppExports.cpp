// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// res_ll_cpp
Eigen::SparseMatrix<double> res_ll_cpp(const Eigen::Map<Eigen::MatrixXd>& XtX, const Eigen::Map<Eigen::MatrixXd>& XtY, const Eigen::Map<Eigen::MatrixXd>& XtZ, const Eigen::MappedSparseMatrix<double>& ZtZ, const Eigen::Map<Eigen::MatrixXd>& YtZ, Eigen::Map<Eigen::VectorXd> Y, const Eigen::Map<Eigen::MatrixXd>& X, const Eigen::MappedSparseMatrix<double>& Z, const Eigen::MappedSparseMatrix<double>& H, const Eigen::MappedSparseMatrix<double>& Psi0, const Eigen::Map<Eigen::VectorXd> psi0, const bool& lik, const bool& score, const bool& finf);
RcppExport SEXP _limestest_res_ll_cpp(SEXP XtXSEXP, SEXP XtYSEXP, SEXP XtZSEXP, SEXP ZtZSEXP, SEXP YtZSEXP, SEXP YSEXP, SEXP XSEXP, SEXP ZSEXP, SEXP HSEXP, SEXP Psi0SEXP, SEXP psi0SEXP, SEXP likSEXP, SEXP scoreSEXP, SEXP finfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type XtX(XtXSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type XtY(XtYSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type XtZ(XtZSEXP);
    Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double>& >::type ZtZ(ZtZSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type YtZ(YtZSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd> >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double>& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double>& >::type H(HSEXP);
    Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double>& >::type Psi0(Psi0SEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::VectorXd> >::type psi0(psi0SEXP);
    Rcpp::traits::input_parameter< const bool& >::type lik(likSEXP);
    Rcpp::traits::input_parameter< const bool& >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< const bool& >::type finf(finfSEXP);
    rcpp_result_gen = Rcpp::wrap(res_ll_cpp(XtX, XtY, XtZ, ZtZ, YtZ, Y, X, Z, H, Psi0, psi0, lik, score, finf));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_limestest_res_ll_cpp", (DL_FUNC) &_limestest_res_ll_cpp, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_limestest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
